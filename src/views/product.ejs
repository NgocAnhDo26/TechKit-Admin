<!-- Products Management Section -->
<section id="products">
  <h2 class="mb-4 text-2xl font-bold">Products Management</h2>
  <button
    onclick="showModal('addProductModal')"
    class="mb-4 rounded bg-green-500 py-2 px-4 font-bold text-white hover:bg-green-700"
  >
    Add New Product
  </button>
  <table class="min-w-full bg-white">
    <thead>
      <tr>
        <th class="border-b py-2 px-4">ID</th>
        <th class="border-b py-2 px-4">Name</th>
        <th class="border-b py-2 px-4">Price</th>
        <th class="border-b py-2 px-4">Actions</th>
      </tr>
    </thead>
    <tbody id="productTableBody">
      <!-- Product rows will be dynamically added here -->
    </tbody>
  </table>
</section>
<!-- Add Product Modal -->
<div
  id="addProductModal"
  class="fixed inset-0 hidden h-full w-full overflow-y-auto bg-gray-600 bg-opacity-50"
>
  <div
    class="relative top-20 mx-auto w-96 rounded-md border bg-white p-5 shadow-lg"
  >
    <h3 class="mb-4 text-lg font-bold">Add New Product</h3>
    <form id="addProductForm">
      <div class="mb-4">
        <label
          class="mb-2 block text-sm font-bold text-gray-700"
          for="productName"
        >
          Product Name
        </label>
        <input
          class="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
          id="productName"
          type="text"
          placeholder="Product Name"
          required
        />
      </div>
      <div class="mb-4">
        <label
          class="mb-2 block text-sm font-bold text-gray-700"
          for="productPrice"
        >
          Price
        </label>
        <input
          class="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
          id="productPrice"
          type="number"
          step="0.01"
          placeholder="Price"
          required
        />
      </div>
      <div class="flex items-center justify-between">
        <button
          class="focus:shadow-outline rounded bg-blue-500 py-2 px-4 font-bold text-white hover:bg-blue-700 focus:outline-none"
          type="submit"
        >
          Add Product
        </button>
        <button
          class="focus:shadow-outline rounded bg-gray-500 py-2 px-4 font-bold text-white hover:bg-gray-700 focus:outline-none"
          type="button"
          onclick="hideModal('addProductModal')"
        >
          Cancel
        </button>
      </div>
    </form>
  </div>
</div>
<script>
  // Use this for AJAX rendering
  function renderProducts() {
    const tableBody = document.getElementById('productTableBody');
    tableBody.innerHTML = '';
    products.forEach((product) => {
      const row = `
                    <tr>
                        <td class="py-2 px-4 border-b">${product.id}</td>
                        <td class="py-2 px-4 border-b">${product.name}</td>
                        <td class="py-2 px-4 border-b">$${product.price.toFixed(
                          2,
                        )}</td>
                        <td class="py-2 px-4 border-b">
                            <button onclick="editProduct(${
                              product.id
                            })" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded mr-2">Edit</button>
                            <button onclick="deleteProduct(${
                              product.id
                            })" class="bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded">Delete</button>
                        </td>
                    </tr>
                `;
      tableBody.innerHTML += row;
    });
  }

  function addProduct(event) {
    event.preventDefault();
    const name = document.getElementById('productName').value;
    const price = parseFloat(document.getElementById('productPrice').value);
    const newProduct = {
      id: products.length + 1,
      name: name,
      price: price,
    };
    products.push(newProduct);
    renderProducts();
    hideModal('addProductModal');
    event.target.reset();
  }

  function editProduct(id) {
    // Implement edit functionality
    console.log('Edit product', id);
  }

  function deleteProduct(id) {
    products = products.filter((product) => product.id !== id);
    renderProducts();
  }

  // Event listeners
  document
    .getElementById('addProductForm')
    .addEventListener('submit', addProduct);
</script>
