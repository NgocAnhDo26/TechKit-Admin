<!-- Customer Orders Section -->
<section id="orders" class="mt-5">
  <h2 class="mb-4 text-2xl font-bold">Đơn Hàng</h2>
  <!-- Filter by status -->
  <form class="mb-4 text-sm">
    <select
      id="status-filter"
      class="appearance-none rounded border py-2 px-3 shadow"
    >
      <option value="">Tất cả</option>
      <option value="Processing">Đang xử lý</option>
      <option value="Pending Confirmation">Chờ xác nhận</option>
      <option value="Pending Shipment">Chờ gửi hàng</option>
      <option value="shipping">Đang vận chuyển</option>
      <option value="Shipped">Đã giao</option>
    </select>
    <button
      type="button"
      id="filter-button"
      class="rounded bg-blue-500 py-2 px-4 font-bold text-white hover:bg-blue-700"
    >
      Lọc
    </button>
  </form>
  <!-- Orders Table -->
  <table class="min-w-full bg-white text-sm">
    <thead>
      <tr>
        <th class="border-b py-2 px-4 text-center">Mã đơn</th>
        <th class="border-b py-2 px-4 text-center">Khách hàng</th>
        <th class="border-b py-2 px-4 text-center">Ngày đặt</th>
        <th class="border-b py-2 px-4 text-center">Tổng tiền</th>
        <th class="border-b py-2 px-4 text-center">Trạng thái</th>
        <th class="border-b py-2 px-4 text-center">Thao tác</th>
      </tr>
    </thead>
    <tbody id="orderTableBody">
      <!-- Orders will be dynamically loaded here -->
    </tbody>
  </table>
  <!-- Pagination -->
  <div id="pagination" class="flex justify-center gap-2 mt-5 text-sm"></div>
</section>

<!-- Details Modal -->
<div
  id="orderDetailsModal"
  class="fixed inset-0 hidden bg-gray-600 bg-opacity-50 overflow-y-auto"
>
  <div class="relative mx-auto w-3/4 rounded bg-white p-5 shadow-lg">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-bold">Chi tiết đơn hàng</h3>
      <button
        onclick="goBackToOrders()"
        class="text-gray-600 hover:text-gray-800"
      >
        <i class="fa-solid fa-arrow-left mr-2"></i>Quay lại
      </button>
    </div>

    <!-- Order Information Grid -->
    <div class="grid grid-cols-3 gap-4 mb-6">
      <!-- Account/Buyer Information Block -->
      <div class="bg-gray-50 p-4 rounded-lg">
        <h4 class="font-semibold mb-3 text-gray-700">Thông tin người mua</h4>
        <div class="space-y-2">
          <p>
            <span class="font-medium">Tên tài khoản:</span>
            <span id="buyer-name"></span>
          </p>
          <p>
            <span class="font-medium">Email:</span>
            <span id="buyer-email"></span>
          </p>
          <p>
            <span class="font-medium">Điện thoại:</span>
            <span id="buyer-phone"></span>
          </p>
        </div>
      </div>

      <!-- Recipient Information Block -->
      <div class="bg-gray-50 p-4 rounded-lg">
        <h4 class="font-semibold mb-3 text-gray-700">Thông tin người nhận</h4>
        <div class="space-y-2">
          <p>
            <span class="font-medium">Tên người nhận:</span>
            <span id="recipient-name"></span>
          </p>
          <p>
            <span class="font-medium">Email:</span>
            <span id="recipient-email"></span>
          </p>
          <p>
            <span class="font-medium">Điện thoại:</span>
            <span id="recipient-phone"></span>
          </p>
        </div>
      </div>

      <!-- Order Information Block -->
      <div class="bg-gray-50 p-4 rounded-lg">
        <h4 class="font-semibold mb-3 text-gray-700">Thông tin đơn hàng</h4>
        <div class="space-y-2">
          <p>
            <span class="font-medium">Mã đơn:</span>
            <span id="order-id"></span>
          </p>
          <p>
            <span class="font-medium">Ngày đặt:</span>
            <span id="order-date"></span>
          </p>
          <p>
            <span class="font-medium">Phương thức thanh toán:</span>
            <span id="payment-method"></span>
          </p>
          <p>
            <span class="font-medium">Địa chỉ giao hàng:</span>
            <span id="shipping-address"></span>
          </p>
        </div>
      </div>
    </div>

    <!-- Order Items Table -->
    <div class="mb-6">
      <h4 class="font-semibold mb-3 text-gray-700">Sản phẩm đã đặt</h4>
      <table class="min-w-full bg-white border">
        <thead class="bg-gray-50">
          <tr>
            <th
              class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase"
            >
              Sản phẩm
            </th>
            <th
              class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase"
            >
              Thương hiệu
            </th>
            <th
              class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase"
            >
              Danh mục
            </th>
            <th
              class="px-6 py-3 border-b text-center text-xs font-medium text-gray-500 uppercase"
            >
              Số lượng
            </th>
            <th
              class="px-6 py-3 border-b text-right text-xs font-medium text-gray-500 uppercase"
            >
              Đơn giá
            </th>
            <th
              class="px-6 py-3 border-b text-right text-xs font-medium text-gray-500 uppercase"
            >
              Thành tiền
            </th>
          </tr>
        </thead>
        <tbody id="order-items"></tbody>
        <tfoot class="bg-gray-50">
          <tr>
            <td colspan="5" class="px-6 py-3 text-right font-medium">
              Total Amount:
            </td>
            <td class="px-6 py-3 text-right font-medium" id="total-amount"></td>
          </tr>
        </tfoot>
      </table>
    </div>

    <!-- Status Update Section -->
    <div class="flex items-center gap-4">
      <label class="font-medium">Cập nhật trạng thái:</label>
      <select id="order-status" class="border rounded py-2 px-3">
        <option value="Processing">Đang xử lý</option>
        <option value="Pending Confirmation">Chờ xác nhận</option>
        <option value="Pending Shipment">Chờ gửi hàng</option>
        <option value="shipping">Đang vận chuyển</option>
        <option value="Shipped">Đã giao</option>
      </select>
      <button
        id="saveStatusBtn"
        class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700"
      >
        Cập nhật
      </button>
    </div>
  </div>
</div>

<script>
  async function fetchOrders(page = 1) {
    showLoading();
    const status = document.getElementById('status-filter').value;
    const res = await fetch(`/api/order?status=${status}&page=${page}`);
    const data = await res.json();
    renderOrders(data.orders);
    renderPagination(
      'pagination',
      data.currentPage,
      data.totalPage,
      fetchOrders,
    );
    hideLoading();
  }

  function renderOrders(orders) {
    const orderTableBody = document.getElementById('orderTableBody');
    orderTableBody.innerHTML = '';
    const statusText = {
      Processing: 'Đang xử lý',
      'Pending Confirmation': 'Chờ xác nhận',
      'Pending Shipment': 'Chờ gửi hàng',
      shipping: 'Đang vận chuyển',
      Shipped: 'Đã giao',
    };
    orders?.forEach((order) => {
      const row = document.createElement('tr');
      // Minimal row structure
      row.innerHTML = `
                <td class="border-b py-2 px-4 text-center">${order.id}</td>
                <td class="border-b py-2 px-4 text-center">${order.customer_name || order.account}</td>
                <td class="border-b py-2 px-4 text-center">${new Date(order.create_time).toLocaleString()}</td>
                <td class="border-b py-2 px-4 text-center">${formatCurrency(order.total_price)}</td>
                <td class="border-b py-2 px-4 text-center">${statusText[order.status]}</td>
                <td class="border-b py-2 px-4 text-center">
                    <button class="bg-green-500 hover:bg-green-600 text-white px-2 py-1 rounded"
                        onclick="openOrderDetails(${order.id})">
                        Xem chi tiết
                    </button>
                </td>
            `;
      orderTableBody.appendChild(row);
    });
  }

  async function openOrderDetails(orderId) {
    showLoading();
    const res = await fetch('/api/order/' + orderId);
    const order = await res.json();

    // Fill buyer (account) information
    document.getElementById('buyer-name').textContent = order.account.name;
    document.getElementById('buyer-email').textContent = order.account.email;
    document.getElementById('buyer-phone').textContent =
      order.account.phone || 'N/A';

    // Fill recipient information
    document.getElementById('recipient-name').textContent =
      order.customer_name || 'N/A';
    document.getElementById('recipient-email').textContent =
      order.customer_email || 'N/A';
    document.getElementById('recipient-phone').textContent =
      order.customer_phone || 'N/A';

    // Fill order information
    document.getElementById('order-id').textContent = order.id;
    document.getElementById('order-date').textContent = new Date(
      order.create_time,
    ).toLocaleString();
    document.getElementById('payment-method').textContent =
      order.payment_method || 'N/A';
    document.getElementById('shipping-address').textContent =
      order.shipping_address || 'N/A';

    // Fill order items table with images
    const orderItemsBody = document.getElementById('order-items');
    orderItemsBody.innerHTML = order.order_product
      .map(
        (item) => `
      <tr>
        <td class="px-6 py-4 border-b">
          <div class="flex items-center">
            <img src="${item.image.url}"
                 alt="${item.name}"
                 class="w-16 h-16 object-cover mr-3">
            <span>${item.name}</span>
          </div>
        </td>
        <td class="px-6 py-4 border-b">${item.brand}</td>
        <td class="px-6 py-4 border-b">${item.category}</td>
        <td class="px-6 py-4 border-b text-center">${item.quantity}</td>
        <td class="px-6 py-4 border-b text-right">${formatCurrency(item.price)}</td>
        <td class="px-6 py-4 border-b text-right">${formatCurrency(item.price * item.quantity)}</td>
      </tr>
    `,
      )
      .join('');

    // Fill total amount
    document.getElementById('total-amount').textContent = formatCurrency(
      order.total_price,
    );

    // Set current status with Vietnamese text
    const statusSelect = document.getElementById('order-status');
    statusSelect.value = order.status;

    document.getElementById('saveStatusBtn').onclick = () =>
      showConfirmDialog('Xác nhận cập nhật trạng thái đơn hàng?', () =>
        updateOrderStatus(order.id),
      );

    showModal('orderDetailsModal');
    hideLoading();
  }

  function goBackToOrders() {
    hideModal('orderDetailsModal');
    fetchOrders(); // Refresh the orders list
  }

  async function updateOrderStatus(orderId) {
    showLoading('Đang cập nhật trạng thái...');
    const status = document.getElementById('order-status').value;
    await fetch('/api/order/' + orderId, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ status }),
    })
      .then(() => showSuccessNotification('Cập nhật trạng thái thành công!'))
      .catch((err) => showErrorNotification('Cập nhật trạng thái thất bại!'));
    hideLoading();
  }

  document
    .getElementById('filter-button')
    .addEventListener('click', () => fetchOrders());
  window.addEventListener('load', () => fetchOrders());
</script>
